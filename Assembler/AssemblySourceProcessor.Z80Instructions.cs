using System.Text.RegularExpressions;

namespace Konamiman.Nestor80.Assembler
{
    public partial class AssemblySourceProcessor
    {
        static readonly (string, byte[])[] FixedZ80Instructions = new (string, byte[])[] {
          ( "ADC HL,BC", new byte[] { 0xed, 0x4a } ),
          ( "ADC HL,DE", new byte[] { 0xed, 0x5a } ),
          ( "ADC HL,HL", new byte[] { 0xed, 0x6a } ),
          ( "ADC HL,SP", new byte[] { 0xed, 0x7a } ),
          ( "ADC A,(HL)", new byte[] { 0x8e } ),
          ( "ADC A,(IX)", new byte[] { 0xdd, 0x8e, 0 } ),
          ( "ADC A,(IY)", new byte[] { 0xfd, 0x8e, 0 } ),
          ( "ADC A,A", new byte[] { 0x8f } ),
          ( "ADC A,B", new byte[] { 0x88 } ),
          ( "ADC A,C", new byte[] { 0x89 } ),
          ( "ADC A,D", new byte[] { 0x8a } ),
          ( "ADC A,E", new byte[] { 0x8b } ),
          ( "ADC A,H", new byte[] { 0x8c } ),
          ( "ADC A,L", new byte[] { 0x8d } ),
          ( "ADC A,IXH", new byte[] { 0xdd, 0x8c } ),
          ( "ADC A,IXL", new byte[] { 0xdd, 0x8d } ),
          ( "ADC A,IYH", new byte[] { 0xfd, 0x8c } ),
          ( "ADC A,IYL", new byte[] { 0xfd, 0x8d } ),

          //Aliases for "ADC A,..." with implicit A
          ( "ADC (HL)", new byte[] { 0x8e } ),
          ( "ADC (IX)", new byte[] { 0xdd, 0x8e, 0 } ),
          ( "ADC (IY)", new byte[] { 0xfd, 0x8e, 0 } ),
          ( "ADC A", new byte[] { 0x8f } ),
          ( "ADC B", new byte[] { 0x88 } ),
          ( "ADC C", new byte[] { 0x89 } ),
          ( "ADC D", new byte[] { 0x8a } ),
          ( "ADC E", new byte[] { 0x8b } ),
          ( "ADC H", new byte[] { 0x8c } ),
          ( "ADC L", new byte[] { 0x8d } ),
          ( "ADC IXH", new byte[] { 0xdd, 0x8c } ),
          ( "ADC IXL", new byte[] { 0xdd, 0x8d } ),
          ( "ADC IYH", new byte[] { 0xfd, 0x8c } ),
          ( "ADC IYL", new byte[] { 0xfd, 0x8d } ),

          ( "ADD HL,BC", new byte[] { 0x09 } ),
          ( "ADD HL,DE", new byte[] { 0x19 } ),
          ( "ADD HL,HL", new byte[] { 0x29 } ),
          ( "ADD HL,SP", new byte[] { 0x39 } ),
          ( "ADD IX,BC", new byte[] { 0xdd, 0x09 } ),
          ( "ADD IX,DE", new byte[] { 0xdd, 0x19 } ),
          ( "ADD IX,IX", new byte[] { 0xdd, 0x29 } ),
          ( "ADD IX,SP", new byte[] { 0xdd, 0x39 } ),
          ( "ADD IY,BC", new byte[] { 0xfd, 0x09 } ),
          ( "ADD IY,DE", new byte[] { 0xfd, 0x19 } ),
          ( "ADD IY,IY", new byte[] { 0xfd, 0x29 } ),
          ( "ADD IY,SP", new byte[] { 0xfd, 0x39 } ),
          ( "ADD A,(HL)", new byte[] { 0x86 } ),
          ( "ADD A,(IX)", new byte[] { 0xdd, 0x86, 0 } ),
          ( "ADD A,(IY)", new byte[] { 0xfd, 0x86, 0 } ),
          ( "ADD A,A", new byte[] { 0x87 } ),
          ( "ADD A,B", new byte[] { 0x80 } ),
          ( "ADD A,C", new byte[] { 0x81 } ),
          ( "ADD A,D", new byte[] { 0x82 } ),
          ( "ADD A,E", new byte[] { 0x83 } ),
          ( "ADD A,H", new byte[] { 0x84 } ),
          ( "ADD A,L", new byte[] { 0x85 } ),
          ( "ADD A,IXH", new byte[] { 0xdd, 0x84 } ),
          ( "ADD A,IXL", new byte[] { 0xdd, 0x85 } ),
          ( "ADD A,IYH", new byte[] { 0xfd, 0x84 } ),
          ( "ADD A,IYL", new byte[] { 0xfd, 0x85 } ),

          //Aliases for "ADD A,..." with implicit A
          ( "ADD (HL)", new byte[] { 0x86 } ),
          ( "ADD (IX)", new byte[] { 0xdd, 0x86, 0 } ),
          ( "ADD (IY)", new byte[] { 0xfd, 0x86, 0 } ),
          ( "ADD A", new byte[] { 0x87 } ),
          ( "ADD B", new byte[] { 0x80 } ),
          ( "ADD C", new byte[] { 0x81 } ),
          ( "ADD D", new byte[] { 0x82 } ),
          ( "ADD E", new byte[] { 0x83 } ),
          ( "ADD H", new byte[] { 0x84 } ),
          ( "ADD L", new byte[] { 0x85 } ),
          ( "ADD IXH", new byte[] { 0xdd, 0x84 } ),
          ( "ADD IXL", new byte[] { 0xdd, 0x85 } ),
          ( "ADD IYH", new byte[] { 0xfd, 0x84 } ),
          ( "ADD IYL", new byte[] { 0xfd, 0x85 } ),

          ( "AND (HL)", new byte[] { 0xa6 } ),
          ( "AND (IX)", new byte[] { 0xdd, 0xa6, 0 } ),
          ( "AND (IY)", new byte[] { 0xfd, 0xa6, 0 } ),
          ( "AND A", new byte[] { 0xa7 } ),
          ( "AND B", new byte[] { 0xa0 } ),
          ( "AND C", new byte[] { 0xa1 } ),
          ( "AND D", new byte[] { 0xa2 } ),
          ( "AND E", new byte[] { 0xa3 } ),
          ( "AND H", new byte[] { 0xa4 } ),
          ( "AND L", new byte[] { 0xa5 } ),
          ( "AND IXH", new byte[] { 0xdd, 0xa4 } ),
          ( "AND IXL", new byte[] { 0xdd, 0xa5 } ),
          ( "AND IYH", new byte[] { 0xfd, 0xa4 } ),
          ( "AND IYL", new byte[] { 0xfd, 0xa5 } ),

          ( "BIT 0,(HL)", new byte[] { 0xcb, 0x46 } ),
          ( "BIT 0,(IX)", new byte[] { 0xdd, 0xcb, 0, 0x46 } ),
          ( "BIT 0,(IY)", new byte[] { 0xfd, 0xcb, 0, 0x46 } ),
          ( "BIT 0,A", new byte[] { 0xcb, 0x47 } ),
          ( "BIT 0,B", new byte[] { 0xcb, 0x40 } ),
          ( "BIT 0,C", new byte[] { 0xcb, 0x41 } ),
          ( "BIT 0,D", new byte[] { 0xcb, 0x42 } ),
          ( "BIT 0,E", new byte[] { 0xcb, 0x43 } ),
          ( "BIT 0,H", new byte[] { 0xcb, 0x44 } ),
          ( "BIT 0,L", new byte[] { 0xcb, 0x45 } ),
          ( "BIT 1,(HL)", new byte[] { 0xcb, 0x4e } ),
          ( "BIT 1,(IX)", new byte[] { 0xdd, 0xcb, 0, 0x4e } ),
          ( "BIT 1,(IY)", new byte[] { 0xfd, 0xcb, 0, 0x4e } ),
          ( "BIT 1,A", new byte[] { 0xcb, 0x4f } ),
          ( "BIT 1,B", new byte[] { 0xcb, 0x48 } ),
          ( "BIT 1,C", new byte[] { 0xcb, 0x49 } ),
          ( "BIT 1,D", new byte[] { 0xcb, 0x4a } ),
          ( "BIT 1,E", new byte[] { 0xcb, 0x4b } ),
          ( "BIT 1,H", new byte[] { 0xcb, 0x4c } ),
          ( "BIT 1,L", new byte[] { 0xcb, 0x4d } ),
          ( "BIT 2,(HL)", new byte[] { 0xcb, 0x56 } ),
          ( "BIT 2,(IX)", new byte[] { 0xdd, 0xcb, 0, 0x56 } ),
          ( "BIT 2,(IY)", new byte[] { 0xfd, 0xcb, 0, 0x56 } ),
          ( "BIT 2,A", new byte[] { 0xcb, 0x57 } ),
          ( "BIT 2,B", new byte[] { 0xcb, 0x50 } ),
          ( "BIT 2,C", new byte[] { 0xcb, 0x51 } ),
          ( "BIT 2,D", new byte[] { 0xcb, 0x52 } ),
          ( "BIT 2,E", new byte[] { 0xcb, 0x53 } ),
          ( "BIT 2,H", new byte[] { 0xcb, 0x54 } ),
          ( "BIT 2,L", new byte[] { 0xcb, 0x55 } ),
          ( "BIT 3,(HL)", new byte[] { 0xcb, 0x5e } ),
          ( "BIT 3,(IX)", new byte[] { 0xdd, 0xcb, 0, 0x5e } ),
          ( "BIT 3,(IY)", new byte[] { 0xfd, 0xcb, 0, 0x5e } ),
          ( "BIT 3,A", new byte[] { 0xcb, 0x5f } ),
          ( "BIT 3,B", new byte[] { 0xcb, 0x58 } ),
          ( "BIT 3,C", new byte[] { 0xcb, 0x59 } ),
          ( "BIT 3,D", new byte[] { 0xcb, 0x5a } ),
          ( "BIT 3,E", new byte[] { 0xcb, 0x5b } ),
          ( "BIT 3,H", new byte[] { 0xcb, 0x5c } ),
          ( "BIT 3,L", new byte[] { 0xcb, 0x5d } ),
          ( "BIT 4,(HL)", new byte[] { 0xcb, 0x66 } ),
          ( "BIT 4,(IX)", new byte[] { 0xdd, 0xcb, 0, 0x66 } ),
          ( "BIT 4,(IY)", new byte[] { 0xfd, 0xcb, 0, 0x66 } ),
          ( "BIT 4,A", new byte[] { 0xcb, 0x67 } ),
          ( "BIT 4,B", new byte[] { 0xcb, 0x60 } ),
          ( "BIT 4,C", new byte[] { 0xcb, 0x61 } ),
          ( "BIT 4,D", new byte[] { 0xcb, 0x62 } ),
          ( "BIT 4,E", new byte[] { 0xcb, 0x63 } ),
          ( "BIT 4,H", new byte[] { 0xcb, 0x64 } ),
          ( "BIT 4,L", new byte[] { 0xcb, 0x65 } ),
          ( "BIT 5,(HL)", new byte[] { 0xcb, 0x6e } ),
          ( "BIT 5,(IX)", new byte[] { 0xdd, 0xcb, 0, 0x6e } ),
          ( "BIT 5,(IY)", new byte[] { 0xfd, 0xcb, 0, 0x6e } ),
          ( "BIT 5,A", new byte[] { 0xcb, 0x6f } ),
          ( "BIT 5,B", new byte[] { 0xcb, 0x68 } ),
          ( "BIT 5,C", new byte[] { 0xcb, 0x69 } ),
          ( "BIT 5,D", new byte[] { 0xcb, 0x6a } ),
          ( "BIT 5,E", new byte[] { 0xcb, 0x6b } ),
          ( "BIT 5,H", new byte[] { 0xcb, 0x6c } ),
          ( "BIT 5,L", new byte[] { 0xcb, 0x6d } ),
          ( "BIT 6,(HL)", new byte[] { 0xcb, 0x76 } ),
          ( "BIT 6,(IX)", new byte[] { 0xdd, 0xcb, 0, 0x76 } ),
          ( "BIT 6,(IY)", new byte[] { 0xfd, 0xcb, 0, 0x76 } ),
          ( "BIT 6,A", new byte[] { 0xcb, 0x77 } ),
          ( "BIT 6,B", new byte[] { 0xcb, 0x70 } ),
          ( "BIT 6,C", new byte[] { 0xcb, 0x71 } ),
          ( "BIT 6,D", new byte[] { 0xcb, 0x72 } ),
          ( "BIT 6,E", new byte[] { 0xcb, 0x73 } ),
          ( "BIT 6,H", new byte[] { 0xcb, 0x74 } ),
          ( "BIT 6,L", new byte[] { 0xcb, 0x75 } ),
          ( "BIT 7,(HL)", new byte[] { 0xcb, 0x7e } ),
          ( "BIT 7,(IX)", new byte[] { 0xdd, 0xcb, 0, 0x7e } ),
          ( "BIT 7,(IY)", new byte[] { 0xfd, 0xcb, 0, 0x7e } ),
          ( "BIT 7,A", new byte[] { 0xcb, 0x7f } ),
          ( "BIT 7,B", new byte[] { 0xcb, 0x78 } ),
          ( "BIT 7,C", new byte[] { 0xcb, 0x79 } ),
          ( "BIT 7,D", new byte[] { 0xcb, 0x7a } ),
          ( "BIT 7,E", new byte[] { 0xcb, 0x7b } ),
          ( "BIT 7,H", new byte[] { 0xcb, 0x7c } ),
          ( "BIT 7,L", new byte[] { 0xcb, 0x7d } ),

          ( "CCF", new byte[] { 0x3f } ),

          ( "CP (HL)", new byte[] { 0xbe } ),
          ( "CP (IX)", new byte[] { 0xdd, 0xbe, 0 } ),
          ( "CP (IY)", new byte[] { 0xfd, 0xbe, 0 } ),
          ( "CP A", new byte[] { 0xbf } ),
          ( "CP B", new byte[] { 0xb8 } ),
          ( "CP C", new byte[] { 0xb9 } ),
          ( "CP D", new byte[] { 0xba } ),
          ( "CP E", new byte[] { 0xbb } ),
          ( "CP H", new byte[] { 0xbc } ),
          ( "CP L", new byte[] { 0xbd } ),
          ( "CP IXH", new byte[] { 0xdd, 0xbc } ),
          ( "CP IXL", new byte[] { 0xdd, 0xbd } ),
          ( "CP IYH", new byte[] { 0xfd, 0xbc } ),
          ( "CP IYL", new byte[] { 0xfd, 0xbd } ),

          ( "CPD", new byte[] { 0xed, 0xa9 } ),

          ( "CPDR", new byte[] { 0xed, 0xb9 } ),

          ( "CPI", new byte[] { 0xed, 0xa1 } ),

          ( "CPIR", new byte[] { 0xed, 0xb1 } ),

          ( "CPL", new byte[] { 0x2f } ),

          ( "DAA", new byte[] { 0x27 } ),

          ( "DEC (HL)", new byte[] { 0x35 } ),
          ( "DEC (IX)", new byte[] { 0xdd, 0x35, 0 } ),
          ( "DEC (IY)", new byte[] { 0xfd, 0x35, 0 } ),
          ( "DEC A", new byte[] { 0x3d } ),
          ( "DEC B", new byte[] { 0x05 } ),
          ( "DEC BC", new byte[] { 0x0b } ),
          ( "DEC C", new byte[] { 0x0d } ),
          ( "DEC D", new byte[] { 0x15 } ),
          ( "DEC DE", new byte[] { 0x1b } ),
          ( "DEC E", new byte[] { 0x1d } ),
          ( "DEC H", new byte[] { 0x25 } ),
          ( "DEC HL", new byte[] { 0x2b } ),
          ( "DEC IX", new byte[] { 0xdd, 0x2b } ),
          ( "DEC IY", new byte[] { 0xfd, 0x2b } ),
          ( "DEC L", new byte[] { 0x2d } ),
          ( "DEC SP", new byte[] { 0x3b } ),
          ( "DEC IXH", new byte[] { 0xdd, 0x25 }),
          ( "DEC IXL", new byte[] { 0xdd, 0x2d }),
          ( "DEC IYH", new byte[] { 0xfd, 0x25 }),
          ( "DEC IYL", new byte[] { 0xfd, 0x2d }),

          ( "DI", new byte[] { 0xf3 } ),

          ( "EI", new byte[] { 0xfb } ),

          ( "EX (SP),HL", new byte[] { 0xe3 } ),
          ( "EX (SP),IX", new byte[] { 0xdd, 0xe3 } ),
          ( "EX (SP),IY", new byte[] { 0xfd, 0xe3 } ),
          ( "EX AF,AF'", new byte[] { 0x08 } ),
          ( "EX AF,AF", new byte[] { 0x08 } ),
          ( "EX DE,HL", new byte[] { 0xeb } ),

          ( "EXX", new byte[] { 0xd9 } ),

          ( "HALT", new byte[] { 0x76 } ),

          ( "IM 0", new byte[] { 0xed, 0x46 } ),
          ( "IM 1", new byte[] { 0xed, 0x56 } ),
          ( "IM 2", new byte[] { 0xed, 0x5e } ),

          ( "IN A,(C)", new byte[] { 0xed, 0x78 } ),
          ( "IN B,(C)", new byte[] { 0xed, 0x40 } ),
          ( "IN C,(C)", new byte[] { 0xed, 0x48 } ),
          ( "IN D,(C)", new byte[] { 0xed, 0x50 } ),
          ( "IN E,(C)", new byte[] { 0xed, 0x58 } ),
          ( "IN H,(C)", new byte[] { 0xed, 0x60 } ),
          ( "IN L,(C)", new byte[] { 0xed, 0x68 } ),
          ( "IN F,(C)", new byte[] { 0xed, 0x70 } ),

          ( "INC (HL)", new byte[] { 0x34 } ),
          ( "INC (IX)", new byte[] { 0xdd, 0x34, 0 } ),
          ( "INC (IY)", new byte[] { 0xfd, 0x34, 0 } ),
          ( "INC A", new byte[] { 0x3c } ),
          ( "INC B", new byte[] { 0x04 } ),
          ( "INC BC", new byte[] { 0x03 } ),
          ( "INC C", new byte[] { 0x0c } ),
          ( "INC D", new byte[] { 0x14 } ),
          ( "INC DE", new byte[] { 0x13 } ),
          ( "INC E", new byte[] { 0x1c } ),
          ( "INC H", new byte[] { 0x24 } ),
          ( "INC HL", new byte[] { 0x23 } ),
          ( "INC IX", new byte[] { 0xdd, 0x23 } ),
          ( "INC IY", new byte[] { 0xfd, 0x23 } ),
          ( "INC L", new byte[] { 0x2c } ),
          ( "INC SP", new byte[] { 0x33 } ),
          ( "INC IXH", new byte[] { 0xdd, 0x24 } ),
          ( "INC IXL", new byte[] { 0xdd, 0x2c } ),
          ( "INC IYH", new byte[] { 0xfd, 0x24 } ),
          ( "INC IYL", new byte[] { 0xfd, 0x2c } ),

          ( "IND", new byte[] { 0xed, 0xaa } ),

          ( "INDR", new byte[] { 0xed, 0xba } ),

          ( "INI", new byte[] { 0xed, 0xa2 } ),

          ( "INIR", new byte[] { 0xed, 0xb2 } ),

          ( "JP (HL)", new byte[] { 0xe9 } ),
          ( "JP (IX)", new byte[] { 0xdd, 0xe9 } ),
          ( "JP (IY)", new byte[] { 0xfd, 0xe9 } ),

          ( "LD (BC),A", new byte[] { 0x02 } ),
          ( "LD (DE),A", new byte[] { 0x12 } ),
          ( "LD (HL),A", new byte[] { 0x77 } ),
          ( "LD (HL),B", new byte[] { 0x70 } ),
          ( "LD (HL),C", new byte[] { 0x71 } ),
          ( "LD (HL),D", new byte[] { 0x72 } ),
          ( "LD (HL),E", new byte[] { 0x73 } ),
          ( "LD (HL),H", new byte[] { 0x74 } ),
          ( "LD (HL),L", new byte[] { 0x75 } ),
          ( "LD (IX),A", new byte[] { 0xdd, 0x77, 0 } ),
          ( "LD (IX),B", new byte[] { 0xdd, 0x70, 0 } ),
          ( "LD (IX),C", new byte[] { 0xdd, 0x71, 0 } ),
          ( "LD (IX),D", new byte[] { 0xdd, 0x72, 0 } ),
          ( "LD (IX),E", new byte[] { 0xdd, 0x73, 0 } ),
          ( "LD (IX),H", new byte[] { 0xdd, 0x74, 0 } ),
          ( "LD (IX),L", new byte[] { 0xdd, 0x75, 0 } ),
          ( "LD (IY),A", new byte[] { 0xfd, 0x77, 0 } ),
          ( "LD (IY),B", new byte[] { 0xfd, 0x70, 0 } ),
          ( "LD (IY),C", new byte[] { 0xfd, 0x71, 0 } ),
          ( "LD (IY),D", new byte[] { 0xfd, 0x72, 0 } ),
          ( "LD (IY),E", new byte[] { 0xfd, 0x73, 0 } ),
          ( "LD (IY),H", new byte[] { 0xfd, 0x74, 0 } ),
          ( "LD (IY),L", new byte[] { 0xfd, 0x75, 0 } ),
          ( "LD A,(BC)", new byte[] { 0x0a } ),
          ( "LD A,(DE)", new byte[] { 0x1a } ),
          ( "LD A,(HL)", new byte[] { 0x7e } ),
          ( "LD A,(IX)", new byte[] { 0xdd, 0x7e, 0 } ),
          ( "LD A,(IY)", new byte[] { 0xfd, 0x7e, 0 } ),
          ( "LD A,A", new byte[] { 0x7f } ),
          ( "LD A,B", new byte[] { 0x78 } ),
          ( "LD A,C", new byte[] { 0x79 } ),
          ( "LD A,D", new byte[] { 0x7a } ),
          ( "LD A,E", new byte[] { 0x7b } ),
          ( "LD A,H", new byte[] { 0x7c } ),
          ( "LD A,I", new byte[] { 0xed, 0x57 } ),
          ( "LD A,R", new byte[] { 0xed, 0x5F } ),
          ( "LD A,L", new byte[] { 0x7d } ),
          ( "LD B,(HL)", new byte[] { 0x46 } ),
          ( "LD B,(IX)", new byte[] { 0xdd, 0x46, 0 } ),
          ( "LD B,(IY)", new byte[] { 0xfd, 0x46, 0 } ),
          ( "LD B,A", new byte[] { 0x47 } ),
          ( "LD B,B", new byte[] { 0x40 } ),
          ( "LD B,C", new byte[] { 0x41 } ),
          ( "LD B,D", new byte[] { 0x42 } ),
          ( "LD B,E", new byte[] { 0x43 } ),
          ( "LD B,H", new byte[] { 0x44 } ),
          ( "LD B,L", new byte[] { 0x45 } ),
          ( "LD C,(HL)", new byte[] { 0x4e } ),
          ( "LD C,(IX)", new byte[] { 0xdd, 0x4e, 0 } ),
          ( "LD C,(IY)", new byte[] { 0xfd, 0x4e, 0 } ),
          ( "LD C,A", new byte[] { 0x4f } ),
          ( "LD C,B", new byte[] { 0x48 } ),
          ( "LD C,C", new byte[] { 0x49 } ),
          ( "LD C,D", new byte[] { 0x4a } ),
          ( "LD C,E", new byte[] { 0x4b } ),
          ( "LD C,H", new byte[] { 0x4c } ),
          ( "LD C,L", new byte[] { 0x4d } ),
          ( "LD D,(HL)", new byte[] { 0x56 } ),
          ( "LD D,(IX)", new byte[] { 0xdd, 0x56, 0 } ),
          ( "LD D,(IY)", new byte[] { 0xfd, 0x56, 0 } ),
          ( "LD D,A", new byte[] { 0x57 } ),
          ( "LD D,B", new byte[] { 0x50 } ),
          ( "LD D,C", new byte[] { 0x51 } ),
          ( "LD D,D", new byte[] { 0x52 } ),
          ( "LD D,E", new byte[] { 0x53 } ),
          ( "LD D,H", new byte[] { 0x54 } ),
          ( "LD D,L", new byte[] { 0x55 } ),
          ( "LD E,(HL)", new byte[] { 0x5e } ),
          ( "LD E,(IX)", new byte[] { 0xdd, 0x5e, 0 } ),
          ( "LD E,(IY)", new byte[] { 0xfd, 0x5e, 0 } ),
          ( "LD E,A", new byte[] { 0x5f } ),
          ( "LD E,B", new byte[] { 0x58 } ),
          ( "LD E,C", new byte[] { 0x59 } ),
          ( "LD E,D", new byte[] { 0x5a } ),
          ( "LD E,E", new byte[] { 0x5b } ),
          ( "LD E,H", new byte[] { 0x5c } ),
          ( "LD E,L", new byte[] { 0x5d } ),
          ( "LD H,(HL)", new byte[] { 0x66 } ),
          ( "LD H,(IX)", new byte[] { 0xdd, 0x66, 0 } ),
          ( "LD H,(IY)", new byte[] { 0xfd, 0x66, 0 } ),
          ( "LD H,A", new byte[] { 0x67 } ),
          ( "LD H,B", new byte[] { 0x60 } ),
          ( "LD H,C", new byte[] { 0x61 } ),
          ( "LD H,D", new byte[] { 0x62 } ),
          ( "LD H,E", new byte[] { 0x63 } ),
          ( "LD H,H", new byte[] { 0x64 } ),
          ( "LD H,L", new byte[] { 0x65 } ),
          ( "LD I,A", new byte[] { 0xed, 0x47 } ),
          ( "LD L,(HL)", new byte[] { 0x6e } ),
          ( "LD L,(IX)", new byte[] { 0xdd, 0x6e, 0 } ),
          ( "LD L,(IY)", new byte[] { 0xfd, 0x6e, 0 } ),
          ( "LD L,A", new byte[] { 0x6f } ),
          ( "LD L,B", new byte[] { 0x68 } ),
          ( "LD L,C", new byte[] { 0x69 } ),
          ( "LD L,D", new byte[] { 0x6a } ),
          ( "LD L,E", new byte[] { 0x6b } ),
          ( "LD L,H", new byte[] { 0x6c } ),
          ( "LD L,L", new byte[] { 0x6d } ),
          ( "LD SP,HL", new byte[] { 0xf9 } ),
          ( "LD SP,IX", new byte[] { 0xdd, 0xf9 } ),
          ( "LD SP,IY", new byte[] { 0xfd, 0xf9 } ),
          ( "LD B,IXH", new byte[] { 0xdd, 0x44 } ),
          ( "LD B,IXL", new byte[] { 0xdd, 0x45 } ),
          ( "LD C,IXH", new byte[] { 0xdd, 0x4c } ),
          ( "LD C,IXL", new byte[] { 0xdd, 0x4d } ),
          ( "LD D,IXH", new byte[] { 0xdd, 0x54 } ),
          ( "LD D,IXL", new byte[] { 0xdd, 0x55 } ),
          ( "LD E,IXH", new byte[] { 0xdd, 0x5c } ),
          ( "LD E,IXL", new byte[] { 0xdd, 0x5d } ),
          ( "LD IXH,B", new byte[] { 0xdd, 0x60 } ),
          ( "LD IXH,C", new byte[] { 0xdd, 0x61 } ),
          ( "LD IXH,D", new byte[] { 0xdd, 0x62 } ),
          ( "LD IXH,E", new byte[] { 0xdd, 0x63 } ),
          ( "LD IXH,IXH", new byte[] { 0xdd, 0x64 } ),
          ( "LD IXH,IXL", new byte[] { 0xdd, 0x65 } ),
          ( "LD IXH,A", new byte[] { 0xdd, 0x67 } ),
          ( "LD IXL,B", new byte[] { 0xdd, 0x68 } ),
          ( "LD IXL,C", new byte[] { 0xdd, 0x69 } ),
          ( "LD IXL,D", new byte[] { 0xdd, 0x6a } ),
          ( "LD IXL,E", new byte[] { 0xdd, 0x6b } ),
          ( "LD IXL,IXH", new byte[] { 0xdd, 0x6c } ),
          ( "LD IXL,IXL", new byte[] { 0xdd, 0x6d } ),
          ( "LD IXL,A", new byte[] { 0xdd, 0x6f } ),
          ( "LD A,IXH", new byte[] { 0xdd, 0x7c } ),
          ( "LD A,IXL", new byte[] { 0xdd, 0x7d } ),
          ( "LD B,IYH", new byte[] { 0xfd, 0x44 } ),
          ( "LD B,IYL", new byte[] { 0xfd, 0x45 } ),
          ( "LD C,IYH", new byte[] { 0xfd, 0x4c } ),
          ( "LD C,IYL", new byte[] { 0xfd, 0x4d } ),
          ( "LD D,IYH", new byte[] { 0xfd, 0x54 } ),
          ( "LD D,IYL", new byte[] { 0xfd, 0x55 } ),
          ( "LD E,IYH", new byte[] { 0xfd, 0x5c } ),
          ( "LD E,IYL", new byte[] { 0xfd, 0x5d } ),
          ( "LD IYH,B", new byte[] { 0xfd, 0x60 } ),
          ( "LD IYH,C", new byte[] { 0xfd, 0x61 } ),
          ( "LD IYH,D", new byte[] { 0xfd, 0x62 } ),
          ( "LD IYH,E", new byte[] { 0xfd, 0x63 } ),
          ( "LD IYH,IYH", new byte[] { 0xfd, 0x64 } ),
          ( "LD IYH,IYL", new byte[] { 0xfd, 0x65 } ),
          ( "LD IYH,A", new byte[] { 0xfd, 0x67 } ),
          ( "LD IYL,B", new byte[] { 0xfd, 0x68 } ),
          ( "LD IYL,C", new byte[] { 0xfd, 0x69 } ),
          ( "LD IYL,D", new byte[] { 0xfd, 0x6a } ),
          ( "LD IYL,E", new byte[] { 0xfd, 0x6b } ),
          ( "LD IYL,IYH", new byte[] { 0xfd, 0x6c } ),
          ( "LD IYL,IYL", new byte[] { 0xfd, 0x6d } ),
          ( "LD IYL,A", new byte[] { 0xfd, 0x6f } ),
          ( "LD A,IYH", new byte[] { 0xfd, 0x7c } ),
          ( "LD A,IYL", new byte[] { 0xfd, 0x7d } ),

          ( "LDD", new byte[] { 0xed, 0xa8 } ),

          ( "LDDR", new byte[] { 0xed, 0xb8 } ),

          ( "LDI", new byte[] { 0xed, 0xa0 } ),

          ( "LDIR", new byte[] { 0xed, 0xb0 } ),

          ( "NEG", new byte[] { 0xed, 0x44 } ),

          ( "NOP", new byte[] { 0x00 } ),

          ( "OR (HL)", new byte[] { 0xb6 } ),
          ( "OR (IX)", new byte[] { 0xdd, 0xb6, 0 } ),
          ( "OR (IY)", new byte[] { 0xfd, 0xb6, 0 } ),
          ( "OR A", new byte[] { 0xb7 } ),
          ( "OR B", new byte[] { 0xb0 } ),
          ( "OR C", new byte[] { 0xb1 } ),
          ( "OR D", new byte[] { 0xb2 } ),
          ( "OR E", new byte[] { 0xb3 } ),
          ( "OR H", new byte[] { 0xb4 } ),
          ( "OR L", new byte[] { 0xb5 } ),
          ( "OR IXH", new byte[] { 0xdd, 0xb4 } ),
          ( "OR IXL", new byte[] { 0xdd, 0xb5 } ),
          ( "OR IYH", new byte[] { 0xfd, 0xb4 } ),
          ( "OR IYL", new byte[] { 0xfd, 0xb5 } ),

          ( "OTDR", new byte[] { 0xed, 0xbb } ) ,

          ( "OTIR", new byte[] { 0xed, 0xb3 } ) ,

          ( "OUT (C),A", new byte[] { 0xed, 0x79 } ),
          ( "OUT (C),B", new byte[] { 0xed, 0x41 } ),
          ( "OUT (C),C", new byte[] { 0xed, 0x49 } ),
          ( "OUT (C),D", new byte[] { 0xed, 0x51 } ),
          ( "OUT (C),E", new byte[] { 0xed, 0x59 } ),
          ( "OUT (C),H", new byte[] { 0xed, 0x61 } ),
          ( "OUT (C),L", new byte[] { 0xed, 0x69 } ),
          ( "OUT F,(C)", new byte[] { 0xed, 0x71 } ),

          ( "OUTD", new byte[] { 0xed, 0xab } ),

          ( "OUTI", new byte[] { 0xed, 0xa3 } ),

          ( "POP AF", new byte[] { 0xf1 } ),
          ( "POP BC", new byte[] { 0xc1 } ),
          ( "POP DE", new byte[] { 0xd1 } ),
          ( "POP HL", new byte[] { 0xe1 } ),
          ( "POP IX", new byte[] { 0xdd, 0xe1 } ),
          ( "POP IY", new byte[] { 0xfd, 0xe1 } ),

          ( "PUSH AF", new byte[] { 0xf5 } ),
          ( "PUSH BC", new byte[] { 0xc5 } ),
          ( "PUSH DE", new byte[] { 0xd5 } ),
          ( "PUSH HL", new byte[] { 0xe5 } ),
          ( "PUSH IX", new byte[] { 0xdd, 0xe5 } ),
          ( "PUSH IY", new byte[] { 0xfd, 0xe5 } ),
        };

        /* Instructions that need to be handled as special cases:
         * 
         * JR, DJNZ: Argument is an address, but generated opcode contains a 1 byte offset from current location pointer
         * LD (IX/Y+s),n: There's a second argument (placed at the last byte)
         * BIT/SET/RES n,R: n must evaluate to a number between 0 and 7
         * RST n: n must evaluate to one of 00h, 08h, 10h, 18h, 20h, 28h, 30h, 38h
         */
        static readonly Dictionary<string, CpuInstruction[]> Z80Instructions = new(StringComparer.OrdinalIgnoreCase) {
            { "ADC", new CpuInstruction[] {
                new CpuInstruction( "ADC A", "(IX+s)", new byte[] { 0xdd, 0x8e, 0 }, 2, 1 ),
                new CpuInstruction( "ADC", "A", "(IY+s)", new byte[] { 0xfd, 0x8e, 0 }, 2, 1 ),
                new CpuInstruction( "ADC", "A", "n", new byte[] { 0xce, 0 }, 1, 1 ),

                //Aliases for "ADC A,..." with implicit A
                new CpuInstruction( "ADC", "(IX+s)", null, new byte[] { 0xdd, 0x8e, 0 }, 2, 1 ),
                new CpuInstruction( "ADC", "(IY+s)", null, new byte[] { 0xfd, 0x8e, 0 }, 2, 1 ),
                new CpuInstruction( "ADC", "n", null, new byte[] { 0xce, 0 }, 1, 1 ) } },
            { "ADD", new CpuInstruction[] {

                new CpuInstruction( "ADD", "A", "(IX+s)", new byte[] { 0xdd, 0x86, 0 }, 2, 1 ),
                new CpuInstruction( "ADD", "A", "(IY+s)", new byte[] { 0xfd, 0x86, 0 }, 2, 1 ),
                new CpuInstruction( "ADD", "A", "n", new byte[] { 0xc6, 0 }, 1, 1 ),
                new CpuInstruction( "ADD", "A", "IXH", new byte[] { 0xdd, 0x84 } ),
                new CpuInstruction( "ADD", "A", "IXL", new byte[] { 0xdd, 0x85 }, isUndocumented: true ),
                new CpuInstruction( "ADD", "A", "IYH", new byte[] { 0xfd, 0x84 }, isUndocumented: true ),
                new CpuInstruction( "ADD", "A", "IYL", new byte[] { 0xfd, 0x85 }, isUndocumented: true ),

                //Aliases for "ADD A,..." with implicit A
                new CpuInstruction( "ADD", "(IX+s)", null, new byte[] { 0xdd, 0x86, 0 }, 2, 1 ),
                new CpuInstruction( "ADD", "(IY+s)", null, new byte[] { 0xfd, 0x86, 0 }, 2, 1 ),
                new CpuInstruction( "ADD", "n", null, new byte[] { 0xc6, 0 }, 1, 1 ) } },
            { "AND", new CpuInstruction[] {
                new CpuInstruction( "AND", "(IX+s)", null, new byte[] { 0xdd, 0xa6, 0 }, 2, 1 ),
                new CpuInstruction( "AND", "(IY+s)", null, new byte[] { 0xfd, 0xa6, 0 }, 2, 1 ),
                new CpuInstruction( "AND", "n", null, new byte[] { 0xe6, 0 }, 1, 1 ) } },
            { "BIT", new CpuInstruction[] {
                new CpuInstruction( "BIT", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0x46 }, 2, 1 ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "BIT", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0x46 }, 2, 1 ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "BIT", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0x4e }, 2, 1 ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "BIT", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0x4e }, 2, 1 ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "BIT", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0x56 }, 2, 1 ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "BIT", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0x56 }, 2, 1 ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "BIT", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0x5e }, 2, 1 ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "BIT", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0x5e }, 2, 1 ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "BIT", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0x66 }, 2, 1 ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "BIT", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0x66 }, 2, 1 ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "BIT", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0x6e }, 2, 1 ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "BIT", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0x6e }, 2, 1 ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "BIT", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0x76 }, 2, 1 ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "BIT", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0x76 }, 2, 1 ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "BIT", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0x7e }, 2, 1 ) { FirstArgumentFixedValue = 7 },
                new CpuInstruction( "BIT", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0x7e }, 2, 1 ) { FirstArgumentFixedValue = 7 } } },
            { "CALL", new CpuInstruction[] {
                new CpuInstruction( "CALL", "C", "n", new byte[] { 0xdc, 0, 0 }, 1, 2 ),
                new CpuInstruction( "CALL", "M", "n", new byte[] { 0xfc, 0, 0 }, 1, 2 ),
                new CpuInstruction( "CALL", "NC", "n", new byte[] { 0xd4, 0, 0 }, 1, 2 ),
                new CpuInstruction( "CALL", "n", null, new byte[] { 0xcd, 0, 0 }, 1, 2 ),
                new CpuInstruction( "CALL", "NZ", "n", new byte[] { 0xc4, 0, 0 }, 1, 2 ),
                new CpuInstruction( "CALL", "PE", "n", new byte[] { 0xec, 0, 0 }, 1, 2 ),
                new CpuInstruction( "CALL", "PO", "n", new byte[] { 0xe4, 0, 0 }, 1, 2 ),
                new CpuInstruction( "CALL", "P", "n", new byte[] { 0xF4, 0, 0 }, 1, 2 ),
                new CpuInstruction( "CALL", "Z", "n", new byte[] { 0xcc, 0, 0 }, 1, 2 ) } },
            { "CP", new CpuInstruction[] {
                new CpuInstruction( "CP", "(IX+s)", null, new byte[] { 0xdd, 0xbe, 0 }, 2, 1 ),
                new CpuInstruction( "CP", "(IY+s)", null, new byte[] { 0xfd, 0xbe, 0 }, 2, 1 ),
                new CpuInstruction( "CP", "n", null, new byte[] { 0xfe, 0 }, 1, 1 ) } },
            { "DEC", new CpuInstruction[] {
                new CpuInstruction( "DEC", "(IX+s)", null, new byte[] { 0xdd, 0x35, 0 }, 2, 1 ),
                new CpuInstruction( "DEC", "(IY+s)", null, new byte[] { 0xfd, 0x35, 0 }, 2, 1 ) } },
            { "DJNZ", new CpuInstruction[] {
                new CpuInstruction( "DJNZ", "d", null, new byte[] { 0x10, 0 }, 1, 1 ) } },
            { "IN", new CpuInstruction[] {
                new CpuInstruction( "IN", "A", "(n)", new byte[] { 0xdb, 0 }, 1, 1 ) } },
            { "INC", new CpuInstruction[] {
                new CpuInstruction( "INC", "(IX+s)", null, new byte[] { 0xdd, 0x34, 0 }, 2, 1 ),
                new CpuInstruction( "INC", "(IY+s)", null, new byte[] { 0xfd, 0x34, 0 }, 2, 1 ) } },
            { "JP", new CpuInstruction[] {
                new CpuInstruction( "JP", "n", null, new byte[] { 0xc3, 0, 0 }, 1, 2 ),
                new CpuInstruction( "JP", "C", "n", new byte[] { 0xda, 0, 0 }, 1, 2 ),
                new CpuInstruction( "JP", "M", "n", new byte[] { 0xfa, 0, 0 }, 1, 2 ),
                new CpuInstruction( "JP", "NC", "n", new byte[] { 0xd2, 0, 0 }, 1, 2 ),
                new CpuInstruction( "JP", "NZ", "n", new byte[] { 0xc2, 0, 0 }, 1, 2 ),
                new CpuInstruction( "JP", "P", "n", new byte[] { 0xf2, 0, 0 }, 1, 2 ),
                new CpuInstruction( "JP", "PE", "n", new byte[] { 0xea, 0, 0 }, 1, 2 ),
                new CpuInstruction( "JP", "PO", "n", new byte[] { 0xe2, 0, 0 }, 1, 2 ),
                new CpuInstruction( "JP", "Z", "n", new byte[] { 0xca, 0, 0 }, 1, 2 ) } },
            { "JR", new CpuInstruction[] {
                new CpuInstruction( "JR", "d", null, new byte[] { 0x18, 0 }, 1, 1 ),
                new CpuInstruction( "JR", "C", "d", new byte[] { 0x38, 0 }, 1, 1 ),
                new CpuInstruction( "JR", "NC", "d", new byte[] { 0x30, 0 }, 1, 1 ),
                new CpuInstruction( "JR", "NZ", "d", new byte[] { 0x20, 0 }, 1, 1 ),
                new CpuInstruction( "JR", "Z", "d", new byte[] { 0x28, 0 }, 1, 1 ) } },
            { "LD", new CpuInstruction[] {
                new CpuInstruction( "LD", "(HL)", "n", new byte[] { 0x36, 0 }, 1, 1 ),
                new CpuInstruction( "LD", "(IX+s)", "A", new byte[] { 0xdd, 0x77, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "(IX+s)", "B", new byte[] { 0xdd, 0x70, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "(IX+s)", "C", new byte[] { 0xdd, 0x71, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "(IX+s)", "D", new byte[] { 0xdd, 0x72, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "(IX+s)", "E", new byte[] { 0xdd, 0x73, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "(IX+s)", "H", new byte[] { 0xdd, 0x74, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "(IX+s)", "L", new byte[] { 0xdd, 0x75, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "(IX+s)", "n", new byte[] { 0xdd, 0x36, 0, 0 }, 2, 1 ) { SecondValuePosition = 3, SecondValueSize = 1 },
                new CpuInstruction( "LD", "(IX)", "n", new byte[] { 0xdd, 0x36, 0, 0 }, 3, 1 ),
                new CpuInstruction( "LD", "(IY+s)", "A", new byte[] { 0xfd, 0x77, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "(IY+s)", "B", new byte[] { 0xfd, 0x70, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "(IY+s)", "C", new byte[] { 0xfd, 0x71, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "(IY+s)", "D", new byte[] { 0xfd, 0x72, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "(IY+s)", "E", new byte[] { 0xfd, 0x73, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "(IY+s)", "H", new byte[] { 0xfd, 0x74, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "(IY+s)", "L", new byte[] { 0xfd, 0x75, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "(IY+s)", "n", new byte[] { 0xfd, 0x36, 0, 0 }, 2, 1 ) { SecondValuePosition = 3, SecondValueSize = 1 },
                new CpuInstruction( "LD", "(IY)", "n", new byte[] { 0xfd, 0x36, 0, 0 }, 3, 1 ),
                new CpuInstruction( "LD", "(n)", "A", new byte[] { 0x32, 0, 0 }, 1, 2 ),
                new CpuInstruction( "LD", "(n)", "BC", new byte[] { 0xed, 0x43, 0, 0 }, 2, 2 ),
                new CpuInstruction( "LD", "(n)", "DE", new byte[] { 0xed, 0x53, 0, 0 }, 2, 2 ),
                new CpuInstruction( "LD", "(n)", "HL", new byte[] { 0x22, 0, 0 }, 1, 2 ),
                new CpuInstruction( "LD", "(n)", "IX", new byte[] { 0xdd, 0x22, 0, 0 }, 2, 2 ),
                new CpuInstruction( "LD", "(n)", "IY", new byte[] { 0xfd, 0x22, 0, 0 }, 2, 2 ),
                new CpuInstruction( "LD", "(n)", "SP", new byte[] { 0xed, 0x73, 0, 0 }, 2, 2 ),
                new CpuInstruction( "LD", "A", "(IX+s)", new byte[] { 0xdd, 0x7e, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "A", "(IY+s)", new byte[] { 0xfd, 0x7e, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "A", "(n)", new byte[] { 0x3a, 0, 0 }, 1, 2 ),
                new CpuInstruction( "LD", "A", "n", new byte[] { 0x3e, 0 }, 1, 1 ),
                new CpuInstruction( "LD", "B", "(IX+s)", new byte[] { 0xdd, 0x46, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "B", "(IY+s)", new byte[] { 0xfd, 0x46, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "B", "n", new byte[] { 0x06, 0 }, 1, 1 ),
                new CpuInstruction( "LD", "BC", "(n)", new byte[] { 0xed, 0x4b, 0, 0 }, 2, 2 ),
                new CpuInstruction( "LD", "BC", "n", new byte[] { 0x01, 0, 0 }, 1, 2 ),
                new CpuInstruction( "LD", "C", "(IX+s)", new byte[] { 0xdd, 0x4e, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "C", "(IY+s)", new byte[] { 0xfd, 0x4e, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "C", "n", new byte[] { 0x0e, 0 }, 1, 1 ),
                new CpuInstruction( "LD", "D", "(IX+s)", new byte[] { 0xdd, 0x56, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "D", "(IY+s)", new byte[] { 0xfd, 0x56, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "D", "n", new byte[] { 0x16, 0 }, 1, 1 ),
                new CpuInstruction( "LD", "DE", "(n)", new byte[] { 0xed, 0x5b, 0, 0 }, 2, 2 ),
                new CpuInstruction( "LD", "DE", "n", new byte[] { 0x11, 0, 0 }, 1, 2 ),
                new CpuInstruction( "LD", "E", "(IX+s)", new byte[] { 0xdd, 0x5e, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "E", "(IY+s)", new byte[] { 0xfd, 0x5e, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "E", "n", new byte[] { 0x1e, 0 }, 1, 1 ),
                new CpuInstruction( "LD", "H", "(IX+s)", new byte[] { 0xdd, 0x66, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "H", "(IY+s)", new byte[] { 0xfd, 0x66, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "H", "n", new byte[] { 0x26, 0 }, 1, 1 ),
                new CpuInstruction( "LD", "HL", "(n)", new byte[] { 0x2a, 0, 0 }, 1, 2 ),
                new CpuInstruction( "LD", "HL", "n", new byte[] { 0x21, 0, 0 }, 1, 2 ),
                new CpuInstruction( "LD", "IX", "(n)", new byte[] { 0xdd, 0x2a, 0, 0 }, 2, 2 ),
                new CpuInstruction( "LD", "IX", "n", new byte[] { 0xdd, 0x21, 0, 0 }, 2, 2 ),
                new CpuInstruction( "LD", "IY", "(n)", new byte[] { 0xfd, 0x2a, 0, 0 }, 2, 2 ),
                new CpuInstruction( "LD", "IY", "n", new byte[] { 0xfd, 0x21, 0, 0 }, 2, 2 ),
                new CpuInstruction( "LD", "L", "(IX+s)", new byte[] { 0xdd, 0x6e, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "L", "(IY+s)", new byte[] { 0xfd, 0x6e, 0 }, 2, 1 ),
                new CpuInstruction( "LD", "L", "n", new byte[] { 0x2e, 0 }, 1, 1 ),
                new CpuInstruction( "LD", "SP", "(n)", new byte[] { 0xed, 0x7b, 0, 0 }, 2, 2 ),
                new CpuInstruction( "LD", "SP", "n", new byte[] { 0x31, 0, 0 }, 1, 2 ),
                new CpuInstruction( "LD", "IXH", "n", new byte[] { 0xdd, 0x26, 0 }, 2, 1, true ),
                new CpuInstruction( "LD", "IXL", "n", new byte[] { 0xdd, 0x2e, 0 }, 2, 1, true ),
                new CpuInstruction( "LD", "IYH", "n", new byte[] { 0xfd, 0x26, 0 }, 2, 1, true ),
                new CpuInstruction( "LD", "IYL", "n", new byte[] { 0xfd, 0x2e, 0 }, 2, 1, true ) } },
            { "OR", new CpuInstruction[] {
                new CpuInstruction( "OR", "(IX+s)", null, new byte[] { 0xdd, 0xb6, 0 }, 2, 1 ),
                new CpuInstruction( "OR", "(IY+s)", null, new byte[] { 0xfd, 0xb6, 0 }, 2, 1 ),
                new CpuInstruction( "OR", "n", null, new byte[] { 0xf6, 0 }, 1, 1 ), } },
            { "OUT", new CpuInstruction[] {
                new CpuInstruction( "OUT", "(n)", "A", new byte[] { 0xd3, 0 }, 1, 1 ),
            { "RES", new CpuInstruction[] {
                new CpuInstruction( "RES", "f", "(HL)", new byte[] { 0xcb, 0x86 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "RES", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0x86 }, 2, 1 ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "RES", "f", "(IX)", new byte[] { 0xdd, 0xcb, 0, 0x86 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "RES", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0x86 }, 2, 1 ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "RES", "f", "(IY)", new byte[] { 0xfd, 0xcb, 0, 0x86 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "RES", "f", "A", new byte[] { 0xcb, 0x87 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "RES", "f", "B", new byte[] { 0xcb, 0x80 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "RES", "f", "C", new byte[] { 0xcb, 0x81 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "RES", "f", "D", new byte[] { 0xcb, 0x82 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "RES", "f", "E", new byte[] { 0xcb, 0x83 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "RES", "f", "H", new byte[] { 0xcb, 0x84 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "RES", "f", "L", new byte[] { 0xcb, 0x85 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "RES", "f", "(HL)", new byte[] { 0xcb, 0x8e } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "RES", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0x8e }, 2, 1 ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "RES", "f", "(IX)", new byte[] { 0xdd, 0xcb, 0, 0x8e } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "RES", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0x8e }, 2, 1 ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "RES", "f", "(IY)", new byte[] { 0xfd, 0xcb, 0, 0x8e } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "RES", "f", "A", new byte[] { 0xcb, 0x8f } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "RES", "f", "B", new byte[] { 0xcb, 0x88 } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "RES", "f", "C", new byte[] { 0xcb, 0x89 } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "RES", "f", "D", new byte[] { 0xcb, 0x8a } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "RES", "f", "E", new byte[] { 0xcb, 0x8b } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "RES", "f", "H", new byte[] { 0xcb, 0x8c } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "RES", "f", "L", new byte[] { 0xcb, 0x8d } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "RES", "f", "(HL)", new byte[] { 0xcb, 0x96 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "RES", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0x96 }, 2, 1 ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "RES", "f", "(IX)", new byte[] { 0xdd, 0xcb, 0, 0x96 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "RES", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0x96 }, 2, 1 ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "RES", "f", "(IY)", new byte[] { 0xfd, 0xcb, 0, 0x96 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "RES", "f", "A", new byte[] { 0xcb, 0x97 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "RES", "f", "B", new byte[] { 0xcb, 0x90 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "RES", "f", "C", new byte[] { 0xcb, 0x91 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "RES", "f", "D", new byte[] { 0xcb, 0x92 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "RES", "f", "E", new byte[] { 0xcb, 0x93 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "RES", "f", "H", new byte[] { 0xcb, 0x94 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "RES", "f", "L", new byte[] { 0xcb, 0x95 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "RES", "f", "(HL)", new byte[] { 0xcb, 0x9e } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "RES", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0x9e }, 2, 1 ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "RES", "f", "(IX)", new byte[] { 0xdd, 0xcb, 0, 0x9e } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "RES", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0x9e }, 2, 1 ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "RES", "f", "(IY)", new byte[] { 0xfd, 0xcb, 0, 0x9e } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "RES", "f", "A", new byte[] { 0xcb, 0x9f } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "RES", "f", "B", new byte[] { 0xcb, 0x98 } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "RES", "f", "C", new byte[] { 0xcb, 0x99 } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "RES", "f", "D", new byte[] { 0xcb, 0x9a } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "RES", "f", "E", new byte[] { 0xcb, 0x9b } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "RES", "f", "H", new byte[] { 0xcb, 0x9c } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "RES", "f", "L", new byte[] { 0xcb, 0x9d } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "RES", "f", "(HL)", new byte[] { 0xcb, 0xa6 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "RES", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0xa6 }, 2, 1 ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "RES", "f", "(IX)", new byte[] { 0xdd, 0xcb, 0, 0xa6 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "RES", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0xa6 }, 2, 1 ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "RES", "f", "(IY)", new byte[] { 0xfd, 0xcb, 0, 0xa6 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "RES", "f", "A", new byte[] { 0xcb, 0xa7 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "RES", "f", "B", new byte[] { 0xcb, 0xa0 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "RES", "f", "C", new byte[] { 0xcb, 0xa1 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "RES", "f", "D", new byte[] { 0xcb, 0xa2 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "RES", "f", "E", new byte[] { 0xcb, 0xa3 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "RES", "f", "H", new byte[] { 0xcb, 0xa4 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "RES", "f", "L", new byte[] { 0xcb, 0xa5 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "RES", "f", "(HL)", new byte[] { 0xcb, 0xae } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "RES", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0xae }, 2, 1 ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "RES", "f", "(IX)", new byte[] { 0xdd, 0xcb, 0, 0xae } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "RES", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0xae }, 2, 1 ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "RES", "f", "(IY)", new byte[] { 0xfd, 0xcb, 0, 0xae } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "RES", "f", "A", new byte[] { 0xcb, 0xaf } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "RES", "f", "B", new byte[] { 0xcb, 0xa8 } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "RES", "f", "C", new byte[] { 0xcb, 0xa9 } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "RES", "f", "D", new byte[] { 0xcb, 0xaa } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "RES", "f", "E", new byte[] { 0xcb, 0xab } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "RES", "f", "H", new byte[] { 0xcb, 0xac } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "RES", "f", "L", new byte[] { 0xcb, 0xad } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "RES", "f", "(HL)", new byte[] { 0xcb, 0xb6 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "RES", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0xb6 }, 2, 1 ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "RES", "f", "(IX)", new byte[] { 0xdd, 0xcb, 0, 0xb6 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "RES", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0xb6 }, 2, 1 ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "RES", "f", "(IY)", new byte[] { 0xfd, 0xcb, 0, 0xb6 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "RES", "f", "A", new byte[] { 0xcb, 0xb7 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "RES", "f", "B", new byte[] { 0xcb, 0xb0 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "RES", "f", "C", new byte[] { 0xcb, 0xb1 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "RES", "f", "D", new byte[] { 0xcb, 0xb2 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "RES", "f", "E", new byte[] { 0xcb, 0xb3 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "RES", "f", "H", new byte[] { 0xcb, 0xb4 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "RES", "f", "L", new byte[] { 0xcb, 0xb5 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "RES", "f", "(HL)", new byte[] { 0xcb, 0xbe } ) { FirstArgumentFixedValue = 7 },
                new CpuInstruction( "RES", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0xbe }, 2, 1 ) { FirstArgumentFixedValue = 7 },
                new CpuInstruction( "RES", "f", "(IX)", new byte[] { 0xdd, 0xcb, 0, 0xbe } ) { FirstArgumentFixedValue = 7 },
                new CpuInstruction( "RES", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0xbe }, 2, 1 ) { FirstArgumentFixedValue = 7 },
                new CpuInstruction( "RES", "f", "(IY)", new byte[] { 0xfd, 0xcb, 0, 0xbe } ) { FirstArgumentFixedValue = 7 },
                new CpuInstruction( "RES", "f", "A", new byte[] { 0xcb, 0xbf } ) { FirstArgumentFixedValue = 7 },
                new CpuInstruction( "RES", "f", "B", new byte[] { 0xcb, 0xb8 } ) { FirstArgumentFixedValue =7 },
                new CpuInstruction( "RES", "f", "C", new byte[] { 0xcb, 0xb9 } ) { FirstArgumentFixedValue =7 },
                new CpuInstruction( "RES", "f", "D", new byte[] { 0xcb, 0xba } ) { FirstArgumentFixedValue =7 },
                new CpuInstruction( "RES", "f", "E", new byte[] { 0xcb, 0xbb } ) { FirstArgumentFixedValue =7 },
                new CpuInstruction( "RES", "f", "H", new byte[] { 0xcb, 0xbc } ) { FirstArgumentFixedValue =7 },
                new CpuInstruction( "RES", "f", "L", new byte[] { 0xcb, 0xbd } ) { FirstArgumentFixedValue = 7 } } },
            { "RET", new CpuInstruction[] {
                new CpuInstruction( "RET", null, null, new byte[] { 0xc9 } ),
                new CpuInstruction( "RET", "C", null, new byte[] { 0xd8 } ),
                new CpuInstruction( "RET", "M", null, new byte[] { 0xf8 } ),
                new CpuInstruction( "RET", "NC", null, new byte[] { 0xd0 } ),
                new CpuInstruction( "RET", "NZ", null, new byte[] { 0xc0 } ),
                new CpuInstruction( "RET", "P", null, new byte[] { 0xf0 } ),
                new CpuInstruction( "RET", "PE", null, new byte[] { 0xe8 } ),
                new CpuInstruction( "RET", "PO", null, new byte[] { 0xe0 } ),
                new CpuInstruction( "RET", "Z", null, new byte[] { 0xc8 } ) } },
            { "RETI", new CpuInstruction[] {
                new CpuInstruction( "RETI", null, null, new byte[] { 0xed, 0x4d } ) } },
            { "RETN", new CpuInstruction[] {
                new CpuInstruction( "RETN", null, null, new byte[] { 0xed, 0x45 } ) } },
            { "RL", new CpuInstruction[] {
                new CpuInstruction( "RL", "(HL)", null, new byte[] { 0xcb, 0x16 } ),
                new CpuInstruction( "RL", "A", null, new byte[] { 0xcb, 0x17 } ),
                new CpuInstruction( "RL", "B", null, new byte[] { 0xcb, 0x10 } ),
                new CpuInstruction( "RL", "C", null, new byte[] { 0xcb, 0x11 } ),
                new CpuInstruction( "RL", "D", null, new byte[] { 0xcb, 0x12 } ),
                new CpuInstruction( "RL", "E", null, new byte[] { 0xcb, 0x13 } ),
                new CpuInstruction( "RL", "H", null, new byte[] { 0xcb, 0x14 } ),
                new CpuInstruction( "RL", "L", null, new byte[] { 0xcb, 0x15 } ),
                new CpuInstruction( "RL", "(IX+s)", null, new byte[] { 0xdd, 0xcb, 0, 0x16 }, 2, 1 ),
                new CpuInstruction( "RL", "(IX)", null, new byte[] { 0xdd, 0xcb, 0, 0x16 } ),
                new CpuInstruction( "RL", "(IY+s)", null, new byte[] { 0xfd, 0xcb, 0, 0x16 }, 2, 1 ),
                new CpuInstruction( "RL", "(IY)", null, new byte[] { 0xfd, 0xcb, 0, 0x16 } ) } },
            { "RLA", new CpuInstruction[] {
                new CpuInstruction( "RLA", null, null, new byte[] { 0x17 } ) } },
            { "RLC", new CpuInstruction[] {
                new CpuInstruction( "RLC", "(HL)", null, new byte[] { 0xcb, 0x06 } ),
                new CpuInstruction( "RLC", "(IX+s)", null, new byte[] { 0xdd, 0xcb, 0, 0x06 }, 2, 1 ),
                new CpuInstruction( "RLC", "(IX)", null, new byte[] { 0xdd, 0xcb, 0, 0x06 } ),
                new CpuInstruction( "RLC", "(IY+s)", null, new byte[] { 0xfd, 0xcb, 0, 0x06 }, 2, 1 ),
                new CpuInstruction( "RLC", "(IY)", null, new byte[] { 0xfd, 0xcb, 0, 0x06 } ),
                new CpuInstruction( "RLC", "A", null, new byte[] { 0xcb, 0x07 } ),
                new CpuInstruction( "RLC", "B", null, new byte[] { 0xcb, 0x00 } ),
                new CpuInstruction( "RLC", "C", null, new byte[] { 0xcb, 0x01 } ),
                new CpuInstruction( "RLC", "D", null, new byte[] { 0xcb, 0x02 } ),
                new CpuInstruction( "RLC", "E", null, new byte[] { 0xcb, 0x03 } ),
                new CpuInstruction( "RLC", "H", null, new byte[] { 0xcb, 0x04 } ),
                new CpuInstruction( "RLC", "L", null, new byte[] { 0xcb, 0x05 } ) } },
            { "RLCA", new CpuInstruction[] {
                new CpuInstruction( "RLCA", null, null, new byte[] { 0x07 } ) } },
            { "RLD", new CpuInstruction[] {
                new CpuInstruction( "RLD", null, null, new byte[] { 0xed, 0x6f } ) } },
            { "RR", new CpuInstruction[] {
                new CpuInstruction( "RR", "(HL)", null, new byte[] { 0xcb, 0x1e } ),
                new CpuInstruction( "RR", "A", null, new byte[] { 0xcb, 0x1f } ),
                new CpuInstruction( "RR", "B", null, new byte[] { 0xcb, 0x18 } ),
                new CpuInstruction( "RR", "C", null, new byte[] { 0xcb, 0x19 } ),
                new CpuInstruction( "RR", "D", null, new byte[] { 0xcb, 0x1a } ),
                new CpuInstruction( "RR", "E", null, new byte[] { 0xcb, 0x1b } ),
                new CpuInstruction( "RR", "H", null, new byte[] { 0xcb, 0x1c } ),
                new CpuInstruction( "RR", "L", null, new byte[] { 0xcb, 0x1d } ),
                new CpuInstruction( "RR", "(IX+s)", null, new byte[] { 0xdd, 0xcb, 0, 0x1e }, 2, 1 ),
                new CpuInstruction( "RR", "(IX)", null, new byte[] { 0xdd, 0xcb, 0, 0x1e } ),
                new CpuInstruction( "RR", "(IY+s)", null, new byte[] { 0xfd, 0xcb, 0, 0x1e }, 2, 1 ),
                new CpuInstruction( "RR", "(IY)", null, new byte[] { 0xfd, 0xcb, 0, 0x1e } ) } },
            { "RRA", new CpuInstruction[] {
                new CpuInstruction( "RRA", null, null, new byte[] { 0x1f } ) } },
            { "RRC", new CpuInstruction[] {
                new CpuInstruction( "RRC", "(HL)", null, new byte[] { 0xcb, 0x0e } ),
                new CpuInstruction( "RRC", "(IX+s)", null, new byte[] { 0xdd, 0xcb, 0, 0x0e }, 2, 1 ),
                new CpuInstruction( "RRC", "(IX)", null, new byte[] { 0xdd, 0xcb, 0, 0x0e } ),
                new CpuInstruction( "RRC", "(IY+s)", null, new byte[] { 0xfd, 0xcb, 0, 0x0e }, 2, 1 ),
                new CpuInstruction( "RRC", "(IY)", null, new byte[] { 0xfd, 0xcb, 0, 0x0e } ),
                new CpuInstruction( "RRC", "A", null, new byte[] { 0xcb, 0x0f } ),
                new CpuInstruction( "RRC", "B", null, new byte[] { 0xcb, 0x08 } ),
                new CpuInstruction( "RRC", "C", null, new byte[] { 0xcb, 0x09 } ),
                new CpuInstruction( "RRC", "D", null, new byte[] { 0xcb, 0x0a } ),
                new CpuInstruction( "RRC", "E", null, new byte[] { 0xcb, 0x0b } ),
                new CpuInstruction( "RRC", "H", null, new byte[] { 0xcb, 0x0c } ),
                new CpuInstruction( "RRC", "L", null, new byte[] { 0xcb, 0x0d } ) } },
            { "RRCA", new CpuInstruction[] {
                new CpuInstruction( "RRCA", null, null, new byte[] { 0x0f } ) } },
            { "RRD", new CpuInstruction[] {
                new CpuInstruction( "RRD", null, null, new byte[] { 0xed, 0x67 } ) } },
            { "RST", new CpuInstruction[] {
                new CpuInstruction( "RST", "f", null, new byte[] { 0xc7 } ) { FirstArgumentFixedValue = 0x00 },
                new CpuInstruction( "RST", "f", null, new byte[] { 0xcf } ) { FirstArgumentFixedValue = 0x08 },
                new CpuInstruction( "RST", "f", null, new byte[] { 0xd7 } ) { FirstArgumentFixedValue = 0x10 },
                new CpuInstruction( "RST", "f", null, new byte[] { 0xdf } ) { FirstArgumentFixedValue = 0x18 },
                new CpuInstruction( "RST", "f", null, new byte[] { 0xe7 } ) { FirstArgumentFixedValue = 0x20 },
                new CpuInstruction( "RST", "f", null, new byte[] { 0xef } ) { FirstArgumentFixedValue = 0x28 },
                new CpuInstruction( "RST", "f", null, new byte[] { 0xf7 } ) { FirstArgumentFixedValue = 0x30 },
                new CpuInstruction( "RST", "f", null, new byte[] { 0xff } ) { FirstArgumentFixedValue = 0x38 } } },
            { "SBC", new CpuInstruction[] {
                new CpuInstruction( "SBC", "HL", "BC", new byte[] { 0xed, 0x42 } ),
                new CpuInstruction( "SBC", "HL", "DE", new byte[] { 0xed, 0x52 } ),
                new CpuInstruction( "SBC", "HL", "HL", new byte[] { 0xed, 0x62 } ),
                new CpuInstruction( "SBC", "HL", "SP", new byte[] { 0xed, 0x72 } ),
                new CpuInstruction( "SBC", "A", "(HL)", new byte[] { 0x9e } ),
                new CpuInstruction( "SBC", "A", "A", new byte[] { 0x9f } ),
                new CpuInstruction( "SBC", "A", "B", new byte[] { 0x98 } ),
                new CpuInstruction( "SBC", "A", "C", new byte[] { 0x99 } ),
                new CpuInstruction( "SBC", "A", "D", new byte[] { 0x9a } ),
                new CpuInstruction( "SBC", "A", "E", new byte[] { 0x9b } ),
                new CpuInstruction( "SBC", "A", "H", new byte[] { 0x9c } ),
                new CpuInstruction( "SBC", "A", "L", new byte[] { 0x9d } ),
                new CpuInstruction( "SBC", "A", "(IX+s)", new byte[] { 0xdd, 0x9e, 0 }, 2, 1 ),
                new CpuInstruction( "SBC", "A", "(IX)", new byte[] { 0xdd, 0x9e, 0 } ),
                new CpuInstruction( "SBC", "A", "(IY+s)", new byte[] { 0xfd, 0x9e, 0 }, 2, 1 ),
                new CpuInstruction( "SBC", "A", "(IY)", new byte[] { 0xfd, 0x9e, 0 } ),
                new CpuInstruction( "SBC", "A", "n", new byte[] { 0xde, 0 }, 1, 1 ),
                new CpuInstruction( "SBC", "A", "IXH", new byte[] { 0xdd, 0x9c }, isUndocumented: true ),
                new CpuInstruction( "SBC", "A", "IXL", new byte[] { 0xdd, 0x9d }, isUndocumented: true ),
                new CpuInstruction( "SBC", "A", "IYH", new byte[] { 0xfd, 0x9c }, isUndocumented: true ),
                new CpuInstruction( "SBC", "A", "IYL", new byte[] { 0xfd, 0x9d }, isUndocumented: true ),

                //Aliases for "SBC A,..." with implicit A
                new CpuInstruction( "SBC", "(HL)", null, new byte[] { 0x9e } ),
                new CpuInstruction( "SBC", "A", null, new byte[] { 0x9f } ),
                new CpuInstruction( "SBC", "B", null, new byte[] { 0x98 } ),
                new CpuInstruction( "SBC", "C", null, new byte[] { 0x99 } ),
                new CpuInstruction( "SBC", "D", null, new byte[] { 0x9a } ),
                new CpuInstruction( "SBC", "E", null, new byte[] { 0x9b } ),
                new CpuInstruction( "SBC", "H", null, new byte[] { 0x9c } ),
                new CpuInstruction( "SBC", "L", null, new byte[] { 0x9d } ),
                new CpuInstruction( "SBC", "(IX+s)", null, new byte[] { 0xdd, 0x9e, 0 }, 2, 1 ),
                new CpuInstruction( "SBC", "(IX)",  null, new byte[] { 0xdd, 0x9e, 0 } ),
                new CpuInstruction( "SBC", "(IY+s)", null, new byte[] { 0xfd, 0x9e, 0 }, 2, 1 ),
                new CpuInstruction( "SBC", "(IY)", null, new byte[] { 0xfd, 0x9e, 0 } ),
                new CpuInstruction( "SBC", "n", null, new byte[] { 0xde, 0 }, 1, 1 ),
                new CpuInstruction( "SBC", "IXH", null, new byte[] { 0xdd, 0x9c }, isUndocumented: true ),
                new CpuInstruction( "SBC", "IXL", null, new byte[] { 0xdd, 0x9d }, isUndocumented: true ),
                new CpuInstruction( "SBC", "IYH", null, new byte[] { 0xfd, 0x9c }, isUndocumented: true ),
                new CpuInstruction( "SBC", "IYL", null, new byte[] { 0xfd, 0x9d }, isUndocumented: true ) } },
            { "SCF", new CpuInstruction[] {
                new CpuInstruction( "SCF", null, null, new byte[] { 0x37 } ) } },
            { "SET", new CpuInstruction[] {
                new CpuInstruction( "SET", "f", "(HL)", new byte[] { 0xcb, 0xc6 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "SET", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0xc6 }, 2, 1 ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "SET", "f", "(IX)", new byte[] { 0xdd, 0xcb, 0, 0xc6 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "SET", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0xc6 }, 2, 1 ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "SET", "f", "(IY)", new byte[] { 0xfd, 0xcb, 0, 0xc6 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "SET", "f", "A", new byte[] { 0xcb, 0xc7 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "SET", "f", "B", new byte[] { 0xcb, 0xc0 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "SET", "f", "C", new byte[] { 0xcb, 0xc1 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "SET", "f", "D", new byte[] { 0xcb, 0xc2 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "SET", "f", "E", new byte[] { 0xcb, 0xc3 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "SET", "f", "H", new byte[] { 0xcb, 0xc4 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "SET", "f", "L", new byte[] { 0xcb, 0xc5 } ) { FirstArgumentFixedValue = 0 },
                new CpuInstruction( "SET", "f", "(HL)", new byte[] { 0xcb, 0xce } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "SET", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0xce }, 2, 1 ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "SET", "f", "(IX)", new byte[] { 0xdd, 0xcb, 0, 0xce } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "SET", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0xce }, 2, 1 ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "SET", "f", "(IY)", new byte[] { 0xfd, 0xcb, 0, 0xce } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "SET", "f", "A", new byte[] { 0xcb, 0xcf } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "SET", "f", "B", new byte[] { 0xcb, 0xc8 } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "SET", "f", "C", new byte[] { 0xcb, 0xc9 } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "SET", "f", "D", new byte[] { 0xcb, 0xca } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "SET", "f", "E", new byte[] { 0xcb, 0xcb } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "SET", "f", "H", new byte[] { 0xcb, 0xcc } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "SET", "f", "L", new byte[] { 0xcb, 0xcd } ) { FirstArgumentFixedValue = 1 },
                new CpuInstruction( "SET", "f", "(HL)", new byte[] { 0xcb, 0xd6 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "SET", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0xd6 }, 2, 1 ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "SET", "f", "(IX)", new byte[] { 0xdd, 0xcb, 0, 0xd6 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "SET", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0xd6 }, 2, 1 ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "SET", "f", "(IY)", new byte[] { 0xfd, 0xcb, 0, 0xd6 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "SET", "f", "A", new byte[] { 0xcb, 0xd7 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "SET", "f", "B", new byte[] { 0xcb, 0xd0 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "SET", "f", "C", new byte[] { 0xcb, 0xd1 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "SET", "f", "D", new byte[] { 0xcb, 0xd2 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "SET", "f", "E", new byte[] { 0xcb, 0xd3 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "SET", "f", "H", new byte[] { 0xcb, 0xd4 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "SET", "f", "L", new byte[] { 0xcb, 0xd5 } ) { FirstArgumentFixedValue = 2 },
                new CpuInstruction( "SET", "f", "(HL)", new byte[] { 0xcb, 0xde } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "SET", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0xde }, 2, 1 ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "SET", "f", "(IX)", new byte[] { 0xdd, 0xcb, 0, 0xde } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "SET", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0xde }, 2, 1 ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "SET", "f", "(IY)", new byte[] { 0xfd, 0xcb, 0, 0xde } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "SET", "f", "A", new byte[] { 0xcb, 0xdf } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "SET", "f", "B", new byte[] { 0xcb, 0xd8 } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "SET", "f", "C", new byte[] { 0xcb, 0xd9 } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "SET", "f", "D", new byte[] { 0xcb, 0xda } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "SET", "f", "E", new byte[] { 0xcb, 0xdb } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "SET", "f", "H", new byte[] { 0xcb, 0xdc } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "SET", "f", "L", new byte[] { 0xcb, 0xdd } ) { FirstArgumentFixedValue = 3 },
                new CpuInstruction( "SET", "f", "(HL)", new byte[] { 0xcb, 0xe6 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "SET", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0xe6 }, 2, 1 ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "SET", "f", "(IX)", new byte[] { 0xdd, 0xcb, 0, 0xe6 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "SET", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0xe6 }, 2, 1 ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "SET", "f", "(IY)", new byte[] { 0xfd, 0xcb, 0, 0xe6 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "SET", "f", "A", new byte[] { 0xcb, 0xe7 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "SET", "f", "B", new byte[] { 0xcb, 0xe0 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "SET", "f", "C", new byte[] { 0xcb, 0xe1 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "SET", "f", "D", new byte[] { 0xcb, 0xe2 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "SET", "f", "E", new byte[] { 0xcb, 0xe3 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "SET", "f", "H", new byte[] { 0xcb, 0xe4 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "SET", "f", "L", new byte[] { 0xcb, 0xe5 } ) { FirstArgumentFixedValue = 4 },
                new CpuInstruction( "SET", "f", "(HL)", new byte[] { 0xcb, 0xee } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "SET", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0xee }, 2, 1 ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "SET", "f", "(IX)", new byte[] { 0xdd, 0xcb, 0, 0xee } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "SET", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0xee }, 2, 1 ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "SET", "f", "(IY)", new byte[] { 0xfd, 0xcb, 0, 0xee } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "SET", "f", "A", new byte[] { 0xcb, 0xef } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "SET", "f", "B", new byte[] { 0xcb, 0xe8 } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "SET", "f", "C", new byte[] { 0xcb, 0xe9 } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "SET", "f", "D", new byte[] { 0xcb, 0xea } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "SET", "f", "E", new byte[] { 0xcb, 0xeb } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "SET", "f", "H", new byte[] { 0xcb, 0xec } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "SET", "f", "L", new byte[] { 0xcb, 0xed } ) { FirstArgumentFixedValue = 5 },
                new CpuInstruction( "SET", "f", "(HL)", new byte[] { 0xcb, 0xf6 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "SET", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0xf6 }, 2, 1 ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "SET", "f", "(IX)", new byte[] { 0xdd, 0xcb, 0, 0xf6 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "SET", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0xf6 }, 2, 1 ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "SET", "f", "(IY)", new byte[] { 0xfd, 0xcb, 0, 0xf6 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "SET", "f", "A", new byte[] { 0xcb, 0xf7 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "SET", "f", "B", new byte[] { 0xcb, 0xf0 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "SET", "f", "C", new byte[] { 0xcb, 0xf1 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "SET", "f", "D", new byte[] { 0xcb, 0xf2 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "SET", "f", "E", new byte[] { 0xcb, 0xf3 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "SET", "f", "H", new byte[] { 0xcb, 0xf4 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "SET", "f", "L", new byte[] { 0xcb, 0xf5 } ) { FirstArgumentFixedValue = 6 },
                new CpuInstruction( "SET", "f", "(HL)", new byte[] { 0xcb, 0xfe } ) { FirstArgumentFixedValue = 7 },
                new CpuInstruction( "SET", "f", "(IX+s)", new byte[] { 0xdd, 0xcb, 0, 0xfe }, 2, 1 ) { FirstArgumentFixedValue = 7 },
                new CpuInstruction( "SET", "f", "(IX)", new byte[] { 0xdd, 0xcb, 0, 0xfe } ) { FirstArgumentFixedValue = 7 },
                new CpuInstruction( "SET", "f", "(IY+s)", new byte[] { 0xfd, 0xcb, 0, 0xfe }, 2, 1 ) { FirstArgumentFixedValue = 7 },
                new CpuInstruction( "SET", "f", "(IY)", new byte[] { 0xfd, 0xcb, 0, 0xfe } ) { FirstArgumentFixedValue = 7 },
                new CpuInstruction( "SET", "f", "A", new byte[] { 0xcb, 0xff } ) { FirstArgumentFixedValue = 7 },
                new CpuInstruction( "SET", "f", "B", new byte[] { 0xcb, 0xf8 } ) { FirstArgumentFixedValue = 7 },
                new CpuInstruction( "SET", "f", "C", new byte[] { 0xcb, 0xf9 } ) { FirstArgumentFixedValue = 7 },
                new CpuInstruction( "SET", "f", "D", new byte[] { 0xcb, 0xfa } ) { FirstArgumentFixedValue = 7 },
                new CpuInstruction( "SET", "f", "E", new byte[] { 0xcb, 0xfb } ) { FirstArgumentFixedValue = 7 },
                new CpuInstruction( "SET", "f", "H", new byte[] { 0xcb, 0xfc } ) { FirstArgumentFixedValue = 7 },
                new CpuInstruction( "SET", "f", "L", new byte[] { 0xcb, 0xfd } ) { FirstArgumentFixedValue = 7 } } },
            { "SLA", new CpuInstruction[] {
                new CpuInstruction( "SLA", "(HL)", null, new byte[] { 0xcb, 0x26 } ),
                new CpuInstruction( "SLA", "(IX+s)", null, new byte[] { 0xdd, 0xcb, 0, 0x26 }, 2, 1 ),
                new CpuInstruction( "SLA", "(IX)", null, new byte[] { 0xdd, 0xcb, 0, 0x26 } ),
                new CpuInstruction( "SLA", "(IY+s)", null, new byte[] { 0xfd, 0xcb, 0, 0x26 }, 2, 1 ),
                new CpuInstruction( "SLA", "(IY)", null, new byte[] { 0xfd, 0xcb, 0, 0x26 } ),
                new CpuInstruction( "SLA", "A", null, new byte[] { 0xcb, 0x27 } ),
                new CpuInstruction( "SLA", "B", null, new byte[] { 0xcb, 0x20 } ),
                new CpuInstruction( "SLA", "C", null, new byte[] { 0xcb, 0x21 } ),
                new CpuInstruction( "SLA", "D", null, new byte[] { 0xcb, 0x22 } ),
                new CpuInstruction( "SLA", "E", null, new byte[] { 0xcb, 0x23 } ),
                new CpuInstruction( "SLA", "H", null, new byte[] { 0xcb, 0x24 } ),
                new CpuInstruction( "SLA", "L", null, new byte[] { 0xcb, 0x25 } ) } },
            { "SRA", new CpuInstruction[] {
                new CpuInstruction( "SRA", "(HL)", null, new byte[] { 0xcb, 0x2e } ),
                new CpuInstruction( "SRA", "(IX+s)", null, new byte[] { 0xdd, 0xcb, 0, 0x2e }, 2, 1 ),
                new CpuInstruction( "SRA", "(IX)", null, new byte[] { 0xdd, 0xcb, 0, 0x2e } ),
                new CpuInstruction( "SRA", "(IY+s)", null, new byte[] { 0xfd, 0xcb, 0, 0x2e }, 2, 1 ),
                new CpuInstruction( "SRA", "(IY)", null, new byte[] { 0xfd, 0xcb, 0, 0x2e } ),
                new CpuInstruction( "SRA", "A", null, new byte[] { 0xcb, 0x2f } ),
                new CpuInstruction( "SRA", "B", null, new byte[] { 0xcb, 0x28 } ),
                new CpuInstruction( "SRA", "C", null, new byte[] { 0xcb, 0x29 } ),
                new CpuInstruction( "SRA", "D", null, new byte[] { 0xcb, 0x2a } ),
                new CpuInstruction( "SRA", "E", null, new byte[] { 0xcb, 0x2b } ),
                new CpuInstruction( "SRA", "H", null, new byte[] { 0xcb, 0x2c } ),
                new CpuInstruction( "SRA", "L", null, new byte[] { 0xcb, 0x2d } ) } },
            { "SRL", new CpuInstruction[] {
                new CpuInstruction( "SRL", "(HL)", null, new byte[] { 0xcb, 0x3e } ),
                new CpuInstruction( "SRL", "A", null, new byte[] { 0xcb, 0x3f } ),
                new CpuInstruction( "SRL", "B", null, new byte[] { 0xcb, 0x38 } ),
                new CpuInstruction( "SRL", "C", null, new byte[] { 0xcb, 0x39 } ),
                new CpuInstruction( "SRL", "D", null, new byte[] { 0xcb, 0x3a } ),
                new CpuInstruction( "SRL", "E", null, new byte[] { 0xcb, 0x3b } ),
                new CpuInstruction( "SRL", "H", null, new byte[] { 0xcb, 0x3c } ),
                new CpuInstruction( "SRL", "L", null, new byte[] { 0xcb, 0x3d } ) } },
            { "SUB", new CpuInstruction[] {
                new CpuInstruction( "SUB", "A", "(HL)", new byte[] { 0x96 } ),
                new CpuInstruction( "SUB", "A", "(IX+s)", new byte[] { 0xdd, 0x96, 0 }, 2, 1 ),
                new CpuInstruction( "SUB", "A", "(IX)", new byte[] { 0xdd, 0x96, 0 } ),
                new CpuInstruction( "SUB", "A", "(IY+s)", new byte[] { 0xfd, 0x96, 0 }, 2, 1 ),
                new CpuInstruction( "SUB", "A", "(IY)", new byte[] { 0xfd, 0x96, 0 } ),
                new CpuInstruction( "SUB", "A", "A", new byte[] { 0x97 } ),
                new CpuInstruction( "SUB", "A", "B", new byte[] { 0x90 } ),
                new CpuInstruction( "SUB", "A", "C", new byte[] { 0x91 } ),
                new CpuInstruction( "SUB", "A", "D", new byte[] { 0x92 } ),
                new CpuInstruction( "SUB", "A", "E", new byte[] { 0x93 } ),
                new CpuInstruction( "SUB", "A", "H", new byte[] { 0x94 } ),
                new CpuInstruction( "SUB", "A", "L", new byte[] { 0x95 } ),
                new CpuInstruction( "SUB", "A", "n", new byte[] { 0xd6, 0 }, 1, 1 ),
                new CpuInstruction( "SUB", "A", "IXH", new byte[] { 0xdd, 0x94 }, isUndocumented: true ),
                new CpuInstruction( "SUB", "A", "IXL", new byte[] { 0xdd, 0x95 }, isUndocumented: true ),
                new CpuInstruction( "SUB", "A", "IYH", new byte[] { 0xfd, 0x94 }, isUndocumented: true ),
                new CpuInstruction( "SUB", "A", "IYL", new byte[] { 0xfd, 0x95 }, isUndocumented: true ),

                //Aliases for "SUB A,..." with implicit A
                new CpuInstruction( "SUB", "(HL)", null, new byte[] { 0x96 } ),
                new CpuInstruction( "SUB", "(IX+s)", null, new byte[] { 0xdd, 0x96, 0 }, 2, 1 ),
                new CpuInstruction( "SUB", "(IX)", null, new byte[] { 0xdd, 0x96, 0 } ),
                new CpuInstruction( "SUB", "(IY+s)", null, new byte[] { 0xfd, 0x96, 0 }, 2, 1 ),
                new CpuInstruction( "SUB", "(IY)", null, new byte[] { 0xfd, 0x96, 0 } ),
                new CpuInstruction( "SUB", "A", null, new byte[] { 0x97 } ),
                new CpuInstruction( "SUB", "B", null, new byte[] { 0x90 } ),
                new CpuInstruction( "SUB", "C", null, new byte[] { 0x91 } ),
                new CpuInstruction( "SUB", "D", null, new byte[] { 0x92 } ),
                new CpuInstruction( "SUB", "E", null, new byte[] { 0x93 } ),
                new CpuInstruction( "SUB", "H", null, new byte[] { 0x94 } ),
                new CpuInstruction( "SUB", "L", null, new byte[] { 0x95 } ),
                new CpuInstruction( "SUB", "n", null, new byte[] { 0xd6, 0 }, 1, 1 ),
                new CpuInstruction( "SUB", "IXH", null, new byte[] { 0xdd, 0x94 }, isUndocumented: true ),
                new CpuInstruction( "SUB", "IXL", null, new byte[] { 0xdd, 0x95 }, isUndocumented: true ),
                new CpuInstruction( "SUB", "IYH", null, new byte[] { 0xfd, 0x94 }, isUndocumented: true ),
                new CpuInstruction( "SUB", "IYL", null, new byte[] { 0xfd, 0x95 }, isUndocumented: true ) } },
            { "XOR", new CpuInstruction[] {
                new CpuInstruction( "XOR", "(HL)", null, new byte[] { 0xae } ),
                new CpuInstruction( "XOR", "(IX+s)", null, new byte[] { 0xdd, 0xae, 0 }, 2, 1 ),
                new CpuInstruction( "XOR", "(IX)", null, new byte[] { 0xdd, 0xae, 0 } ),
                new CpuInstruction( "XOR", "(IY+s)", null, new byte[] { 0xfd, 0xae, 0 }, 2, 1 ),
                new CpuInstruction( "XOR", "(IY)", null, new byte[] { 0xfd, 0xae, 0 } ),
                new CpuInstruction( "XOR", "A", null, new byte[] { 0xaf } ),
                new CpuInstruction( "XOR", "B", null, new byte[] { 0xa8 } ),
                new CpuInstruction( "XOR", "C", null, new byte[] { 0xa9 } ),
                new CpuInstruction( "XOR", "D", null, new byte[] { 0xaa } ),
                new CpuInstruction( "XOR", "E", null, new byte[] { 0xab } ),
                new CpuInstruction( "XOR", "H", null, new byte[] { 0xac } ),
                new CpuInstruction( "XOR", "L", null, new byte[] { 0xad } ),
                new CpuInstruction( "XOR", "n", null, new byte[] { 0xee, 0 }, 1, 1 ),
                new CpuInstruction( "XOR", "IXH", null, new byte[] { 0xdd, 0xac }, isUndocumented: true ),
                new CpuInstruction( "XOR", "IXL", null, new byte[] { 0xdd, 0xad }, isUndocumented: true ),
                new CpuInstruction( "XOR", "IYH", null, new byte[] { 0xfd, 0xac }, isUndocumented: true ),
                new CpuInstruction( "XOR", "IYL", null, new byte[] { 0xfd, 0xad }, isUndocumented: true ) } },
            { "SLL", new CpuInstruction[] {
                new CpuInstruction( "SLL", "B", null, new byte[] { 0xcb, 0x30 }, isUndocumented: true ),
                new CpuInstruction( "SLL", "C", null, new byte[] { 0xcb, 0x31 }, isUndocumented: true ),
                new CpuInstruction( "SLL", "D", null, new byte[] { 0xcb, 0x32 }, isUndocumented: true ),
                new CpuInstruction( "SLL", "E", null, new byte[] { 0xcb, 0x33 }, isUndocumented: true ),
                new CpuInstruction( "SLL", "H", null, new byte[] { 0xcb, 0x34 }, isUndocumented: true ),
                new CpuInstruction( "SLL", "L", null, new byte[] { 0xcb, 0x35 }, isUndocumented: true ),
                new CpuInstruction( "SLL", "(HL)", null, new byte[] { 0xcb, 0x36 }, isUndocumented: true ),
                new CpuInstruction( "SLL", "A", null, new byte[] { 0xcb, 0x37 }, isUndocumented: true ) } }
        };           
    }
}
